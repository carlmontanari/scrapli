---
name: test

on:
  workflow_call: {}
  workflow_dispatch:
    inputs:
      debug_unit:
        description: "start tmate before unit tests"
        type: boolean
        required: false
        default: false
      debug_functional:
        description: "start tmate before functional tests"
        type: boolean
        required: false
        default: false

jobs:
  unit:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 16
      matrix:
        version: ["3.10", "3.11", "3.12", "3.13"]
        # we want to ensure we are doing the unit tests on all our main targets
        # this ensures all the ctypes magic works on all the platforms we can run in ci at least
        os: ["ubuntu-latest", "macos-latest", "ubuntu-24.04-arm", "macos-13"]

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.version }}

      # genie has ridiculous pins, pip (and maybe you?) will die if you try to install it
      # with basically anything else... so just install separately
      - name: install python dev tools
        run: |
          python -m pip install -r requirements-dev.txt
          python -m pip install -r requirements-genie.txt
          python -m pip install -r requirements-textfsm.txt

      - name: install scrapli+libscrapli
        run: |
          python -m pip install .

      - name: setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_unit }}

      - name: unit tests
        run: |
          make test

  functional:
    runs-on: "ubuntu-latest"

    # run functional on main or prs pointing to main
    if: >
      (
        github.ref_name == 'main' ||
        github.base_ref == 'main'
      ) || (
        github.event_name == 'workflow_dispatch' &&
        inputs.debug_e2e
      )

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: load env vars for workflow run
        run: |
          source .github/vars.env
          echo "PYTHON_VERSION=$PYTHON_VERSION" >> "$GITHUB_ENV"
          echo "CONTAINERLAB_VERSION=$CONTAINERLAB_VERSION" >> "$GITHUB_ENV"

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: install containerlab
        run: |
          bash -c "$(curl -sL https://get.containerlab.dev)" -- -v ${{ env.CONTAINERLAB_VERSION }}

      - name: build netopeer server image
        run: |
          make build-netopeer-server

      - name: run containerlab topology
        run: |
          sudo clab deploy -t topo.ci.amd64.yaml
        working-directory: tests/functional/clab

      - name: install python dev tools
        run: |
          python -m pip install -r requirements-dev.txt

      - name: install scrapli+libscrapli
        run: |
          python -m pip install .

      - name: setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_e2e }}

      - name: wait for srl node to be available
        working-directory: tests/functional/clab
        run: |
          ./wait.sh

      - name: functional tests
        # skip the "enormous" output test as its super slow in gh runners
        run: |
          make test-functional-ci ARGS="--skip-slow"
